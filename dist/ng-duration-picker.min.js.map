{"version":3,"sources":["ng-duration-picker.js"],"names":["getPosition","element","padding","ngdpWidth","ngdpHeight","_element$getBoundingC","getBoundingClientRect","height","width","top","left","visibleHeight","window","innerHeight","up","middle","inTheMiddle","document","body","clientWidth","rightSide","durationPicker","Factory","restrict","scope","result","human","output","lang","link","attrs","updateUI","ev","$apply","type","ui","visible","_getPosition","pos","lazy","hasOwnProperty","angular","wrap","insertPicker","on","controller","$scope","$compile","open","dirty","error","picker","template","DOMWrapper","getElementsByClassName","prepend","toggleNav","$event","preventDefault","category","categories","log","preview","forEach","cat","customOutput","indexOf","changeCategory","value","current","next","previous","updatePreview","buildString","customString","substring","length","push","reverse","join","duration","moment","humanize","as","updateValue","add","changeInput","val","Number","isNaN","bindToExternalModel","module","directive"],"mappings":"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","file":"ng-duration-picker.min.js","sourcesContent":["'use strict';\n\n(function() {\n\n  const template =\n    `<div class=\"ngdp\" style=\"top: {{ui.pos.top}}px; left: {{ui.pos.left}}px\" \n      ng-class=\"{'ngdp-visible': ui.visible, 'ngdp-open': ui.open, 'ngdp-dirty': ui.dirty}\">\n\n        <div class=\"ngdp-content\">\n          <div class=\"ngdp-top\">\n            <div class=\"ngdp-change\">\n              <a href=\"#\" ng-click=\"changeCategory(next, $event)\"> {{next}} </a>\n            </div>\n            <div class=\"ngdp-toggle\" ng-click=\"toggleNav($event)\">\n              <i class=\"ngdp-bar\"> </i>\n              <i class=\"ngdp-bar\"> </i>\n              <i class=\"ngdp-bar\"> </i>\n            </div>\n          </div>    \n          <div class=\"ngdp-middle\">\n            <div class=\"col-xs-12\">\n              <div class=\"ngdp-updown col-xs-5 text-center\">\n                <a href=\"#\" ng-click=\"updateValue(true, $event)\">\n                  <span class=\"glyphicon glyphicon-plus\"></span>\n                </a>\n                <input type=\"text\" class=\"form-control\" ng-model=\"value\" \n                       ng-change=\"changeInput()\" ng-class=\"{'ngdp-error': ui.error}\">\n                <a href=\"#\" ng-click=\"updateValue(false, $event)\">\n                  <span class=\"glyphicon glyphicon-minus\"></span>\n                </a>\n              </div>\n              <div class=\"col-xs-7\">\n                <h4 class=\"text-muted\">{{category}}</h4>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xs-12 text-center\">\n                <small class=\"text-muted\"> {{preview.human}} </small>\n              </div>\n            </div>\n          </div>\n          <div class=\"ngdp-bottom\">\n            <div class=\"ngdp-change\">\n              <a href=\"#\" ng-click=\"changeCategory(previous, $event)\"> {{previous}}</a>\n            </div>\n            <div class=\"ngdp-done\" ng-click=\"bindToExternalModel($event)\">\n              <span class=\"ngdp-check\"> </span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"ngdp-navigation\">\n          <div class=\"ngdp-back\" style=\"visibility: {{ui.dirty ? 'visible' : 'hidden'}}\">\n            <a href=\"#\" ng-click=\"toggleNav($event)\">\n              <span class=\"glyphicon glyphicon-chevron-left\"></span>\n              <span>go back </span>\n            </a>\n          </div>\n          <h4>Select a category to start </h4>\n          <ul class=\"ngdp-categories\">\n            <li class=\"ngdp-category\" ng-repeat=\"category in categories\">\n              <button type=\"button\" class=\"btn btn-sm\" ng-click=\"changeCategory(category)\">{{category}}</button>\n            </li>\n          </ul>\n        </div>\n      </div>`;\n\n  function getPosition(element) {\n\n    const padding = 15;\n    const ngdpWidth = 230;\n    const ngdpHeight = 200;\n\n    // Gets the current position and size of the element\n    // referent to the visible area of the browser\n    let {\n      height, width, top, left\n    } = element.getBoundingClientRect();\n\n    // Check if the element in which the directive was used\n    // it's above the center of the screen\n    let visibleHeight = window.innerHeight;\n    let up = top > (visibleHeight / 2);\n\n    // Change the top offset to stick the UI to the element\n    top = up ? -(padding + ngdpHeight) : (padding + height);\n\n    let middle = left + width / 2;\n\n    let inTheMiddle = middle  > ngdpWidth / 2 && \n                      middle <= document.body.clientWidth - ngdpWidth / 2;\n\n    let rightSide = middle > document.body.clientWidth - ngdpWidth / 2;\n\n    if (inTheMiddle)\n      left = width / 2 - ngdpWidth / 2;\n    else if (rightSide)\n      left = width - ngdpWidth;\n    else\n      left = 0;\n\n    return {top, left};\n  }\n\n  /* @ngInject */\n  function durationPicker() {\n    \n    const Factory = {\n      restrict: 'A',\n      scope: {\n        result: '=',\n        human: '=',\n        output: '@',\n        lang: '@'\n      },\n      link(scope, element, attrs) {\n        scope.lazy = attrs.hasOwnProperty('lazy');\n        angular.element(element).wrap('<div class=\"ngdp-wrapper\"></div>')\n\n        // TODO add handler to hide if clicked outside\n        scope.insertPicker();\n\n        function updateUI(ev) {\n          scope.$apply(() => {\n            if (ev.type === 'click') {\n              scope.ui.visible = !scope.ui.visible;\n            }\n\n            if (scope.ui.visible) {\n              let { top, left } = getPosition(element[0]);\n              scope.ui.pos = {top, left};\n            }\n          });\n        }\n\n        angular.element(element).on('click', ev => updateUI(ev) );\n        angular.element(window).on('scroll', ev => updateUI(ev) );\n      },\n      controller: ['$scope', '$compile', function($scope, $compile) {\n\n        $scope.ui = {\n          visible: false,            // ui is visible\n          open: true,                // open navigation\n          dirty: false,              // first time selected category\n          error: false,              // input is a wrong number\n          pos: {top: 0, left: 0},    // position of the directive\n          lang: $scope.lang || 'es', // i18n\n        };\n\n        $scope.insertPicker = () => {\n          let picker = $compile(template)($scope);\n          let DOMWrapper = document.getElementsByClassName('ngdp-wrapper');\n          angular.element(DOMWrapper).prepend(picker);\n        };\n\n        $scope.toggleNav = $event => {\n          if ($scope.ui.error) return;\n          $scope.ui.open = !$scope.ui.open;\n          $event.preventDefault();\n        };\n\n        $scope.category = 'minutes';\n        $scope.categories = [\n          'milliseconds', 'seconds', 'minutes', 'hours',\n          'days', 'weeks', 'months', 'years'\n        ];\n        $scope.log = $scope.preview = {};\n        $scope.categories.forEach(cat => $scope.log[cat] = 0);\n\n        if (!$scope.output)\n          $scope.customOutput = 'minutes';\n        else \n          $scope.customOutput = $scope.categories.indexOf($scope.output) === -1 ? \n            'minutes' : $scope.output;\n\n        $scope.changeCategory = (category, $event) => {\n          $event && $event.preventDefault();\n          if ($scope.ui.error) return;\n\n          if (category.indexOf('limit') !== -1)\n            return false;\n\n          $scope.category = category;\n          $scope.value = $scope.log[category];\n          $scope.ui.open = false;\n          $scope.ui.dirty = true;\n\n          let current = $scope.categories.indexOf(category);\n          $scope.next = $scope.categories[current + 1] || 'reached limit';\n          $scope.previous = $scope.categories[current - 1] || 'reached limit';\n        };\n\n        $scope.updatePreview = () => {\n          function buildString() {\n            let customString = [];\n            $scope.categories.forEach(category => {\n              const value = $scope.log[category];\n              if (value){\n                if (value === 1) {\n                  category = category.substring(0, category.length - 1);\n                }\n                customString.push(`${value} ${category}`);\n              }\n            });\n            return customString.reverse().join(' ');\n          }\n\n          let duration = moment.duration($scope.log);\n          $scope.preview.human = $scope.lazy ?\n              duration.humanize() : buildString();\n          $scope.preview.result = duration.as($scope.customOutput);\n        }\n\n        $scope.updateValue = (add, $event) => {\n          $event && $event.preventDefault();\n          if ($scope.ui.error) return;\n          $scope.value = add ? ++$scope.log[$scope.category] :\n               $scope.value && --$scope.log[$scope.category];\n\n          $scope.updatePreview();\n        };\n\n        $scope.changeInput = () => {\n          let val = Number($scope.value);\n          if (Number.isNaN(val) || val < 0) {\n            $scope.ui.error = true;\n            $scope.preview.human = 'wrong input';\n            return;\n          }\n\n          $scope.ui.error = false;\n\n          $scope.log[$scope.category] = $scope.value;\n          $scope.updatePreview();\n        };\n\n        $scope.bindToExternalModel = () => {\n          if ($scope.ui.error) return;\n          $scope.human = $scope.preview.human;\n          $scope.result = $scope.preview.result;\n          $scope.ui.visible = false;\n        };\n      }]\n    };\n\n    return Factory;\n  }\n\n  angular.module('ngDurationPicker', [])\n    .directive('ngDurationPicker', durationPicker);\n\n})();"]}